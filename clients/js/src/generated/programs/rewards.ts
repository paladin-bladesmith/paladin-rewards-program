/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import { containsBytes, getU8Encoder, type Address } from '@solana/web3.js';
import {
  type ParsedDistributeRewardsInstruction,
  type ParsedHarvestRewardsInstruction,
  type ParsedInitializeHolderRewardsInstruction,
  type ParsedInitializeHolderRewardsPoolInstruction,
} from '../instructions';

export const REWARDS_PROGRAM_ADDRESS =
  '6wsKX77nJ8CzjR2CUfbosKd1C42HfkQu9AwtoZtaLx9q' as Address<'6wsKX77nJ8CzjR2CUfbosKd1C42HfkQu9AwtoZtaLx9q'>;

export enum RewardsAccount {
  HolderRewards,
  HolderRewardsPool,
}

export enum RewardsInstruction {
  InitializeHolderRewardsPool,
  DistributeRewards,
  InitializeHolderRewards,
  HarvestRewards,
}

export function identifyRewardsInstruction(
  instruction: { data: Uint8Array } | Uint8Array
): RewardsInstruction {
  const data =
    instruction instanceof Uint8Array ? instruction : instruction.data;
  if (containsBytes(data, getU8Encoder().encode(0), 0)) {
    return RewardsInstruction.InitializeHolderRewardsPool;
  }
  if (containsBytes(data, getU8Encoder().encode(1), 0)) {
    return RewardsInstruction.DistributeRewards;
  }
  if (containsBytes(data, getU8Encoder().encode(2), 0)) {
    return RewardsInstruction.InitializeHolderRewards;
  }
  if (containsBytes(data, getU8Encoder().encode(3), 0)) {
    return RewardsInstruction.HarvestRewards;
  }
  throw new Error(
    'The provided instruction could not be identified as a rewards instruction.'
  );
}

export type ParsedRewardsInstruction<
  TProgram extends string = '6wsKX77nJ8CzjR2CUfbosKd1C42HfkQu9AwtoZtaLx9q',
> =
  | ({
      instructionType: RewardsInstruction.InitializeHolderRewardsPool;
    } & ParsedInitializeHolderRewardsPoolInstruction<TProgram>)
  | ({
      instructionType: RewardsInstruction.DistributeRewards;
    } & ParsedDistributeRewardsInstruction<TProgram>)
  | ({
      instructionType: RewardsInstruction.InitializeHolderRewards;
    } & ParsedInitializeHolderRewardsInstruction<TProgram>)
  | ({
      instructionType: RewardsInstruction.HarvestRewards;
    } & ParsedHarvestRewardsInstruction<TProgram>);
